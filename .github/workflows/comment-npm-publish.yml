name: npm publish

on:
  workflow_call:
    secrets:
      github-token:
        required: true
      npm-read-token:
        required: true

jobs:
  npm-publish:
    # This job only runs for pull request comments
    name: npm publish
    if: github.event.comment.body == 'npm publish'
    runs-on: [self-hosted, ts-large-x64-docker-large]
    steps:
      - name: "📦 Update comment"
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.github-token }}
          script: |
            const { repo: { owner, repo } } = context;
            github.rest.issues.updateComment({
              owner,
              repo,
              comment_id: ${{ github.event.comment.id }},
              body: [
                `> ${{ github.event.comment.body }}`,
                `:package: Publishing npm package...`,
                `[View job](https://github.com/${owner}/${repo}/actions/runs/${context.runId})`
              ].join('\n\n')
            });

      # Begin build:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v5
      - name: ⬇️ Checkout PR
        run: |
          git fetch origin pull/${{ github.event.issue.number }}/head:pr-find-commit
          git checkout pr-find-commit

      - uses: actions/setup-node@v5
      - name: Check for .nvmrc file root folder
        continue-on-error: true
        id: nvmrcRoot
        run: |
          [ -f .nvmrc ]
      - name: Set up Node with .nvmrc in root
        if: ${{ steps.nvmrcRoot.outcome == 'success' }}
        uses: actions/setup-node@v5
        with:
          node-version-file: ".nvmrc"
          registry-url: "https://npm.pkg.github.com"
          cache: "npm"
      - name: Set up Node in default version
        if: ${{ steps.nvmrcRoot.outcome != 'success' }}
        uses: actions/setup-node@v5
        with:
          node-version: 14
          registry-url: "https://npm.pkg.github.com"
          cache: "npm"

      - name: 📥 Download deps
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm-read-token }}

      - name: 🔧 Build
        run: npm run --if-present build

      - name: 📦 Set pre-release version
        run: npm version --no-git-tag-version 0.0.0-$(git rev-parse HEAD)

      - name: 🚀 Release
        run: npm publish --tag=pre
        env:
          NODE_AUTH_TOKEN: ${{ secrets.github-token }}

      # Report results:
      - name: "📦 Success message"
        if: ${{ success() }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.github-token }}
          script: |
            const { repo: { owner, repo }, payload  } = context;
            const { name: packageName, version } = require(`${process.env.GITHUB_WORKSPACE}/package.json`);
            const body = `Pre-release of \`${packageName}\` successfully published :rocket:\n\n` +
              `\`\`\`\nnpm install ${packageName}@${version}\n\`\`\`\n\n` +
              "Happy testing :tophat:";
            github.rest.issues.updateComment({
              owner,
              repo,
              comment_id: ${{ github.event.comment.id }},
              body: [
                `> ${{ github.event.comment.body }}`,
                body,
                `[View job](https://github.com/${owner}/${repo}/actions/runs/${context.runId})`
              ].join('\n\n')
            });
      - name: "📦 Failure message"
        if: ${{ failure() }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.github-token }}
          script: |
            const { repo: { owner, repo }  } = context;
            github.rest.issues.updateComment({
              owner,
              repo,
              comment_id: ${{ github.event.comment.id }},
              body: [
                `> ${{ github.event.comment.body }}`,
                `:package: Failed to publish package :disappointed:`,
                `[View job](https://github.com/${owner}/${repo}/actions/runs/${context.runId})`
              ].join('\n\n')
            });
